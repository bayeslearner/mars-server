version: '3.6'

# A "basic" splunk deployment, with maybe a more sophisticated one later. 
# No deployment server and universal forwarder. 1 heaviyforwarder 
# No idx master or idx clustering, only 1 idx
# No deployer and sh clustering, only 1 sh
# 1 license server and dmc
# Does persist etc and var for all 3 nodes into ${VOLUME_DIR}/splunk/{service}/{etc|var}


networks:
  default:
    name: splunk-network
  traefik-network:
    external:
      name: traefik-network


services:

  # appserver:
  #   networks:
  #     splunknet:
  #       aliases:
  #         - appserver
  #   image: nwang92/nginx-mitm
  #   hostname: appserver
  #   ports:
  #     - 80
  #   volumes:
  #     - ../tests/fixtures:/www/data

  sh1:
    networks:
    - default
    - traefik-network

    image: ${SPLUNK_IMAGE:-bayeslearner/splunk:latest}
    command: start
    hostname: sh1
    container_name: sh1
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_INDEXER_URL=idx1
      - SPLUNK_SEARCH_HEAD_URL=sh1
      - SPLUNK_CLUSTER_MASTER_URL=cm1
      - SPLUNK_ROLE=splunk_search_head
      - SPLUNK_IDXC_PASS4SYMMKEY=asdf1234
      # - SPLUNK_LICENSE_URI
      - DEBUG=true
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD:-asdf1234}
      # - SPLUNK_LICENSE_MASTER_URL=lm1
    ports:
      - 8000
      - 8089
    volumes:
      - ${VOLUME_DIR:-/splunk}/sh1/etc:/opt/splunk/etc
      - ${VOLUME_DIR:-/splunk}/sh1/var:/opt/splunk/var
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:-true}
      - traefik.docker.network=traefik-network
      - traefik.http.routers.sh1.entrypoints=web
      - traefik.http.routers.sh1.rule=Host(`sh1-${DOMAIN}`)
      - traefik.http.services.sh1.loadbalancer.server.port=8000

  idx1:
    networks:
    - default
    - traefik-network
    image: ${SPLUNK_IMAGE:-bayeslearner/splunk:latest}
    command: start
    hostname: idx1
    container_name: idx1
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_INDEXER_URL=idx1
      - SPLUNK_SEARCH_HEAD_URL=sh1
      - SPLUNK_CLUSTER_MASTER_URL=cm1
      - SPLUNK_ROLE=splunk_indexer
      - SPLUNK_IDXC_PASS4SYMMKEY=asdf1234
      # - SPLUNK_LICENSE_URI
      - DEBUG=true
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD:-asdf1234}
      # - SPLUNK_LICENSE_MASTER_URL=lm1
      - JAVA_VERSION=openjdk:11
    ports:
      - 8000
      - 8089
    volumes:
      - ${VOLUME_DIR:-/splunk}/idx1/etc:/opt/splunk/etc
      - ${VOLUME_DIR:-/splunk}/idx1/var:/opt/splunk/var
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:-true}
      - traefik.docker.network=traefik-network
      - traefik.http.routers.idx1.entrypoints=web
      - traefik.http.routers.idx1.rule=Host(`idx1-${DOMAIN}`)
      - traefik.http.services.idx1.loadbalancer.server.port=8000

  cm1:
    networks:
      default:
        aliases:
          - cm1
          - lm1
          - hf1
          - dmc
      traefik-network:
        aliases:
          - cm1
          - lm1
          - hf1
          - dmc
    image: ${SPLUNK_IMAGE:-bayeslearner/splunk:latest}
    command: start
    hostname: cm1
    container_name: cm1
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_SEARCH_HEAD_URL=sh1
      - SPLUNK_INDEXER_URL=idx1
      - SPLUNK_HEAVY_FORWARDER_URL=hf1
      - SPLUNK_CLUSTER_MASTER_URL=cm1
      - SPLUNK_ROLE=splunk_cluster_master #splunk_license_master,splunk_monitor,splunk_heavy_forwarder can't specify multiple roles???
      - SPLUNK_LICENSE_URI
      - DEBUG=true
      - SPLUNK_HEC_TOKEN=abcd1234
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD:-asdf1234}
      # - SPLUNK_LICENSE_MASTER_URL=lm1
      - SPLUNK_IDXC_PASS4SYMMKEY=asdf1234
      - JAVA_VERSION=openjdk:11
    ports:
      - 8000
      - 8089
      - 8088
    volumes:
      - ${VOLUME_DIR:-/splunk}/cm1/etc:/opt/splunk/etc
      - ${VOLUME_DIR:-/splunk}/cm1/var:/opt/splunk/var
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:-true}
      - traefik.docker.network=traefik-network
      - traefik.http.routers.hf1.entrypoints=web
      - traefik.http.routers.hf1.rule=Host(`cm1-${DOMAIN}`)
      - traefik.http.services.hf1.loadbalancer.server.port=8000      

      